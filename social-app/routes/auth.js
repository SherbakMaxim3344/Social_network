import express from 'express';
import { readJSON, writeJSON, DEFAULT_AVATAR } from '../utils/data.js';

const router = express.Router();

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –≤—Ö–æ–¥
router.get('/', (req, res) => {
  res.render('index', { 
    title: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å - –í—Ö–æ–¥',
    error: req.query.error,
    defaultAvatar: DEFAULT_AVATAR
  });
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
router.get('/register', (req, res) => {
  res.render('register', { 
    title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏',
    error: req.query.error,
    defaultAvatar: DEFAULT_AVATAR
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
router.post('/register', async (req, res) => {
  try {
    const { name, email, password } = req.body;
    
    console.log(`üîß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${name}, ${email}, ${password}`);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!name || !email || !password) {
      return res.render('register', { 
        error: '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è',
        title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
        defaultAvatar: DEFAULT_AVATAR
      });
    }
    
    if (password.length < 6) {
      return res.render('register', { 
        error: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤',
        title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
        defaultAvatar: DEFAULT_AVATAR
      });
    }
    
    const users = await readJSON('users.json');
    console.log(`üìä –¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${users.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º email
    const existingUser = users.find(u => u.email === email);
    if (existingUser) {
      console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email ${email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      return res.render('register', { 
        error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
        title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
        defaultAvatar: DEFAULT_AVATAR
      });
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const newUserId = users.length > 0 ? Math.max(...users.map(u => u.id)) + 1 : 1;
    const newUser = {
      id: newUserId,
      name,
      email,
      password,
      avatar: DEFAULT_AVATAR,
      role: 'user',
      status: 'active',
      birthDate: null,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    
    users.push(newUser);
    const writeSuccess = await writeJSON('users.json', users);
    
    if (writeSuccess) {
      console.log(`‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${name} (${email}), ID: ${newUserId}`);
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–Ø–ï–ú –ù–ê –õ–ï–ù–¢–£ –ù–û–í–û–°–¢–ï–ô
      res.redirect(`/news/${newUser.id}`);
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`);
      res.status(500).render('error', { 
        error: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö',
        defaultAvatar: DEFAULT_AVATAR
      });
    }
    
  } catch (error) {
    console.error('Registration error:', error);
    res.status(500).render('error', { 
      error: '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ' + error.message,
      defaultAvatar: DEFAULT_AVATAR
    });
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞
router.post('/login', async (req, res) => {
  try {
    const { email, password } = req.body;
    const users = await readJSON('users.json');
    
    const user = users.find(u => u.email === email && u.password === password);
    if (!user) {
      return res.render('index', { 
        error: '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å',
        title: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å - –í—Ö–æ–¥',
        defaultAvatar: DEFAULT_AVATAR
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (user.status === 'blocked') {
      return res.render('index', { 
        error: '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
        title: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å - –í—Ö–æ–¥',
        defaultAvatar: DEFAULT_AVATAR
      });
    }
    
    if (user.status === 'pending') {
      return res.render('index', { 
        error: '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
        title: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å - –í—Ö–æ–¥',
        defaultAvatar: DEFAULT_AVATAR
      });
    }
    
    // –†–ï–î–ò–†–ï–ö–¢ –í –ó–ê–í–ò–°–ò–ú–û–°–¢–ò –û–¢ –†–û–õ–ò
    if (user.role === 'admin') {
      console.log(`üîê –ê–¥–º–∏–Ω ${user.name} –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∫—É`);
      res.redirect(`https://localhost:3444/?userId=${user.id}`);
    } else {
      console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.name} –≤–æ—à–µ–ª –≤ —Å–æ—Ü—Å–µ—Ç—å`);
      // –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–Ø–ï–ú –ù–ê –õ–ï–ù–¢–£ –ù–û–í–û–°–¢–ï–ô
      res.redirect(`/news/${user.id}`);
    }
    
  } catch (error) {
    console.error('Login error:', error);
    res.status(500).render('error', { 
      error: '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞',
      defaultAvatar: DEFAULT_AVATAR
    });
  }
});

export default router;