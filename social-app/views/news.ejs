<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <style>
        .news-feed {
            max-height: 70vh;
            overflow-y: auto;
        }
        .post-content {
            line-height: 1.6;
            white-space: pre-wrap;
        }
        .like-btn.liked {
            background-color: #0d6efd;
            border-color: #0d6efd;
            color: white;
        }
        .comments-section {
            display: none;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #e9ecef;
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="/news/<%= user.id %>">–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å</a>
            <div class="navbar-nav ms-auto">
                <div class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" role="button" data-bs-toggle="dropdown">
                        <img src="<%= user.avatar || defaultAvatar %>" class="user-avatar me-2">
                        <%= user.name %>
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/profile/<%= user.id %>">üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</a></li>
                        <li><a class="dropdown-item" href="/friends/<%= user.id %>">ü§ù –î—Ä—É–∑—å—è</a></li>
                        <li><a class="dropdown-item" href="/news/<%= user.id %>">üì∞ –õ–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π</a></li>
                        <% if (user.role === 'admin') { %>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="https://localhost:3444" target="_blank">‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</a></li>
                        <% } %>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item text-danger" href="/">üö™ –í—ã–π—Ç–∏</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>

    <div class="container mt-4 fade-in">
        <div class="row">
            <div class="col-md-8 mx-auto">
                <!-- –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ -->
                <div class="card mb-4" id="show-post-form-btn">
                    <div class="card-body text-center">
                        <button class="btn btn-primary btn-lg" id="show-post-form">
                            ‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç
                        </button>
                    </div>
                </div>

                <div class="card mb-4" id="post-form" style="display: none;">
                    <div class="card-body">
                        <h5 class="card-title">–ß—Ç–æ —É –≤–∞—Å –Ω–æ–≤–æ–≥–æ?</h5>
                        <form action="/posts/<%= user.id %>" method="POST" id="new-post-form">
                            <div class="mb-3">
                                <textarea class="form-control" name="content" rows="3" 
                                          placeholder="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏..." 
                                          id="post-content"
                                          required></textarea>
                            </div>
                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-primary" id="submit-post">
                                    –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
                                </button>
                                <button type="button" class="btn btn-secondary" id="cancel-post">
                                    –û—Ç–º–µ–Ω–∞
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- –õ–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π -->
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h4>–õ–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π</h4>
                    <span class="badge bg-primary" id="posts-count"><%= posts.length %> –∑–∞–ø–∏—Å–µ–π</span>
                </div>
                
                <div class="news-feed" id="news-feed">
                    <% if (posts.length === 0) { %>
                        <div class="alert alert-info text-center">
                            <h5>–ü–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π</h5>
                            <p class="mb-0">–î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–∑–µ–π –∏–ª–∏ –æ–ø—É–±–ª–∏–∫—É–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç!</p>
                        </div>
                    <% } else { %>
                        <% posts.forEach(post => { %>
                            <div class="post-card" data-post-id="<%= post.id %>">
                                <div class="user-info">
                                    <img src="<%= post.author.avatar || defaultAvatar %>" 
                                         class="user-avatar" 
                                         alt="<%= post.author.name %>">
                                    <div>
                                        <h6 class="mb-0"><%= post.author.name %></h6>
                                        <small class="text-muted post-date">
                                            <%= new Date(post.createdAt).toLocaleString('ru-RU') %>
                                        </small>
                                    </div>
                                </div>
                                <p class="mb-2 post-content"><%= post.content %></p>
                                <div class="d-flex gap-3">
                                    <button class="btn btn-outline-primary btn-sm like-btn" 
                                            data-post-id="<%= post.id %>">
                                        ‚ù§Ô∏è <span class="likes-count"><%= post.likes || 0 %></span>
                                    </button>
                                    <button class="btn btn-outline-secondary btn-sm comments-btn"
                                            data-post-id="<%= post.id %>">
                                        üí¨ –ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å
                                    </button>
                                </div>

                                <!-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ -->
                                <div class="comments-section" id="comments-<%= post.id %>">
                                    <div class="comments-list mb-2">
                                        <!-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –∑–¥–µ—Å—å -->
                                    </div>
                                    <div class="input-group">
                                        <input type="text" class="form-control comment-input" 
                                               placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."
                                               data-post-id="<%= post.id %>">
                                        <button class="btn btn-primary add-comment" 
                                                data-post-id="<%= post.id %>">
                                            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                                        </button>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –ø–æ—Å—Ç–∞
            const showFormBtn = document.getElementById('show-post-form');
            const postForm = document.getElementById('post-form');
            const showFormBtnContainer = document.getElementById('show-post-form-btn');
            const cancelBtn = document.getElementById('cancel-post');
            const postContent = document.getElementById('post-content');
            
            if (showFormBtn && postForm) {
                showFormBtn.addEventListener('click', function() {
                    postForm.style.display = 'block';
                    showFormBtnContainer.style.display = 'none';
                    postContent.focus();
                });
                
                cancelBtn.addEventListener('click', function() {
                    postForm.style.display = 'none';
                    showFormBtnContainer.style.display = 'block';
                    postContent.value = '';
                });
            }
            
            // –õ–∞–π–∫–∏
            document.querySelectorAll('.like-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const postId = this.dataset.postId;
                    const likesCount = this.querySelector('.likes-count');
                    let likes = parseInt(likesCount.textContent);
                    
                    if (this.classList.contains('liked')) {
                        likes--;
                        this.classList.remove('liked');
                        this.classList.remove('btn-primary');
                        this.classList.add('btn-outline-primary');
                    } else {
                        likes++;
                        this.classList.add('liked');
                        this.classList.add('btn-primary');
                        this.classList.remove('btn-outline-primary');
                    }
                    
                    likesCount.textContent = likes;
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è
                    this.style.transform = 'scale(1.1)';
                    setTimeout(() => {
                        this.style.transform = 'scale(1)';
                    }, 200);
                });
            });
            
            // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
            document.querySelectorAll('.comments-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const postId = this.dataset.postId;
                    const commentsSection = document.getElementById(`comments-${postId}`);
                    
                    if (commentsSection.style.display === 'block') {
                        commentsSection.style.display = 'none';
                        this.textContent = 'üí¨ –ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å';
                    } else {
                        commentsSection.style.display = 'block';
                        this.textContent = 'üìù –°–∫—Ä—ã—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏';
                        commentsSection.querySelector('.comment-input').focus();
                    }
                });
            });
            
            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            document.querySelectorAll('.add-comment').forEach(btn => {
                btn.addEventListener('click', function() {
                    const postId = this.dataset.postId;
                    const input = document.querySelector(`.comment-input[data-post-id="${postId}"]`);
                    const commentsList = document.querySelector(`#comments-${postId} .comments-list`);
                    
                    if (input.value.trim()) {
                        const commentDiv = document.createElement('div');
                        commentDiv.className = 'comment mb-2';
                        commentDiv.innerHTML = `
                            <strong>–í—ã:</strong> ${input.value.trim()}
                            <small class="text-muted ms-2">${new Date().toLocaleString('ru-RU')}</small>
                        `;
                        
                        commentsList.appendChild(commentDiv);
                        input.value = '';
                        
                        // –ê–Ω–∏–º–∞—Ü–∏—è
                        commentDiv.style.opacity = '0';
                        commentDiv.style.transform = 'translateY(-10px)';
                        setTimeout(() => {
                            commentDiv.style.transition = 'all 0.3s ease';
                            commentDiv.style.opacity = '1';
                            commentDiv.style.transform = 'translateY(0)';
                        }, 10);
                    }
                });
            });
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø–æ Enter
            document.querySelectorAll('.comment-input').forEach(input => {
                input.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        const postId = this.dataset.postId;
                        document.querySelector(`.add-comment[data-post-id="${postId}"]`).click();
                    }
                });
            });
            
            // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –ø–æ—Å—Ç–∞
            const postFormElement = document.getElementById('new-post-form');
            if (postFormElement) {
                postFormElement.addEventListener('submit', function(e) {
                    const content = postContent.value.trim();
                    if (!content) {
                        e.preventDefault();
                        postContent.focus();
                        postContent.classList.add('is-invalid');
                    }
                });
                
                postContent.addEventListener('input', function() {
                    this.classList.remove('is-invalid');
                });
            }
        });
    </script>
</body>
</html>